@using XWingTO.Web
@using XWingTO.Web.ViewModels.Tournament
@model XWingTO.Web.ViewModels.Tournament.TournamentAdminModel
@{
	Layout = "_Layout";
}

<form method="post" asp-controller="Tournament" asp-action="Admin">
	<input type="hidden" value="@Model.Id" asp-for="Id" />
	<div class="row">
		<div class="col-2">
			<label asp-for="Name"></label>
		</div>
		<input asp-for="Name" class="col-4">
		<div class="col-2">
			<label asp-for="Date"></label>
		</div>
		<input asp-for="Date" class="col-4" min="@DateTime.Today.AddDays(1).ToString("yyyy-MM-dd")" type="date" value="@Model.Date.ToString("yyyy-MM-dd")">
	</div>
	<p class="h5">Location</p>
	<div class="row">
		<div class="col-2">
			<label asp-for="Country"></label>
		</div>
		<input asp-for="Country" class="col-4">
		<div class="col-2">
			<label asp-for="State"></label>
		</div>
		<input asp-for="State" class="col-4">
	</div>
	<div class="row">
		<div class="col-2">
			<label asp-for="City"></label>
		</div>
		<input asp-for="City" class="col-4">
		<div class="col-2">
			<label asp-for="Venue"></label>
		</div>
		<input asp-for="Venue" class="col-4">
	</div>

	<input type="submit" class="btn btn-primary" />
</form>
<form asp-action="Cancel">
	<input type="hidden" name="tournamentId" value="@Model.Id" />
	<input type="submit" value="Cancel Tournament" class="btn btn-danger" />
</form>
<div class="row">
	<div class="accordion-header">
	<a class="accordion-collapse collapsed" data-bs-toggle="collapse" href="#playersDiv" role="button">Players</a>
	</div>
	<div class="row collapse" id="playersDiv">
		<table class="table">
			<thead>
				<tr>
					<th>
						Player
					</th>
					<th>
						Points
					</th>
					<th>
						Mission Points
					</th>
					<th>
						Dropped
					</th>
				</tr>
			</thead>
			<tbody>
				@foreach (TournamentPlayerDisplayModel player in Model.Players.OrderByDescending(p => p.Points)
					.ThenByDescending(p => p.MissionPoints))
				{
					<tr>
						<td>
							@player.Name
						</td>
						<td>
							@player.Points
						</td>
						<td>
							@player.MissionPoints
						</td>
						<td >
							@if (@player.Dropped)
							{
								<form class="inline-form" asp-action="Drop" asp-route-tournamentPlayerId="@player.TournamentPlayerId" asp-route-tournamentId="@Model.Id" asp-route-dropped="false">
									<input type="submit" class="btn btn-success" value="Undrop"/>
								</form>
							}
							else
							{
								<form class="inline-form" asp-action="Drop" asp-route-tournamentPlayerId="@player.TournamentPlayerId" asp-route-tournamentId="@Model.Id" asp-route-dropped="true">
									<input type="submit" class="btn btn-danger" value="Drop"/>
								</form>
							}

							@if (!Model.Rounds.Any())
							{
								<form class="inline-form" asp-action="Unregister" asp-route-tournamentId="@Model.Id" asp-route-tournamentPlayerId="@player.TournamentPlayerId">
									<input type="submit" class="btn btn-danger" value="Unregister"/>
								</form>
							}
						</td>

					</tr>
				}
			</tbody>
		</table>
	</div>
</div>
<div class="row">
	@if (Model.UserIsRegistered)
	{
		// Unregister
		<a class="btn btn-danger" asp-controller="Tournament" asp-action="Unregister" asp-route-tournamentid="@Model.Id">Unregister</a>
	}
	else
	{
		// Rgister
		<a class="btn btn-success" asp-controller="Tournament" asp-action="Register" asp-route-tournamentid="@Model.Id">Register</a>
	}

</div>
<div class="row">
	<strong>Rounds</strong>
</div>
<div class="row">
	@if (Model.Players.Count >= 4)
	{
		@if (Model.Rounds.Any())
		{
			TournamentRoundDisplayModel currentRound = Model.Rounds.Single(r => r.Round == Model.Rounds.Count);
			if (currentRound.Games.Any(g => g.Turns == 0))
			{
				<div class="alert alert-primary" role="alert">
					The next round will be available to generate once all game results for the current round have been received.
				</div>

			}
			else
			{
			    <a asp-action="GenerateRound" role="button" class="btn btn-primary" asp-route-tournamentId="@Model.Id" asp-mode="@RoundGenerationMode.Automatic">Autogenerate Round</a>
				<a asp-action="GenerateRound" role="button" class="btn btn-primary" asp-route-tournamentId="@Model.Id" asp-mode="@RoundGenerationMode.Manual">Generate Round</a>
			}
		}
	}
	else
	{
		<div class="alert alert-primary" role="alert">
			Round generation will be available once four or more players are registered.
		</div>
	}
</div>
<div class="row">
	<div class="accordion" id="roundsAccordion">
		@foreach (TournamentRoundDisplayModel round in Model.Rounds.OrderBy(r => r.Round))
		{
			string heading = $"heading{@round.Round}";
			string collapse = $"collapse{@round.Round}";
			string buttonStyle;

			@if (round.Round == Model.Rounds.Count)
			{
				buttonStyle = "accordion-collapse";
			}
			else
			{
				buttonStyle = "accordion-collapse collapsed";
			}
			<div class="accordion-item">
				<h2 class="accordion-header" id="@heading">
					<button class="@buttonStyle" type="button" data-bs-toggle="collapse" data-bs-target="#@collapse" aria-expanded="true" aria-controls="@collapse">
						Round @round.Round
					</button>
				</h2>
				<div id="@collapse" class="accordion-collapse collapse show" aria-labelledby="@heading" data-bs-parent="#roundsAccordion">
					<div class="accordion-body">
						@foreach (TournamentGameDisplayModel game in round.Games)
						{
							<div class="row">
								<div class="col-3">@game.Player1</div>
								<div class="col-1">@game.Player1Score</div>
								<div class="col-1">vs.</div>
								<div class="col-1">@game.Player2Score</div>
								<div class="col-3">@game.Player2</div>
							</div>
							<div class="row">
								@if (game.Turns == 0)
								{
									<div class="col-9"><a class="btn btn-primary" role="button" href="@Url.Action("ResultSubmission", new {gameId = game.GameId})">Enter Score</a> </div>
								}
								else
								{
									<div class="col-9"><a class="btn btn-warning" role="button" href="@Url.Action("ResultSubmission", new {gameId = game.GameId})">Adjust Score</a> </div>
								}
							</div>
						}
					</div>
				</div>
			</div>
		}
	</div>
</div>